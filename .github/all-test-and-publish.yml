name: Publish Package on PyPI or Test PyPI

on:
  push:
    branches: [ master ]
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9, 3.10, 3.11]
        architecture: [x86_64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install GCC
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            sudo apt-get update -y
            sudo apt-get install -y gcc
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            brew install gcc
          elif [ "${{ matrix.os }}" = "windows-latest" ]; then
            choco install mingw
          else
            echo "Unsupported OS: ${{ matrix.os }}"
            exit 1
          fi

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Build package
        run: |
          python setup.py sdist bdist_wheel --plat-name=${{ runner.os }}-${{ matrix.architecture }}

      - name: Run tests, compute coverage and generate xml report
        run: |
          coverage run --source=pydl85/supervised/classifiers/tests/ -m pytest -v
          coverage xml --data-file=.coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: true
          name: codecov-umbrella
          verbose: true

      - name: Publish ðŸ“¦ on Test PyPI and on PyPI (if tag)
        env:
          TWINE_USERNAME: __token__
          TWINE_TEST_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
          TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/
          TWINE_REPOSITORY: testpypi
          PACKAGE_PATH: dist/*
        run: |
          if [[ "${{ github.ref }}" == "refs/tags/"* ]]; then
            echo "Publishing on PyPI"
            twine upload --verbose --skip-existing --repository pypi $PACKAGE_PATH -u $TWINE_USERNAME -p $TWINE_PASSWORD
          fi
          echo "Publishing on Test PyPI"
          twine upload --verbose --skip-existing --repository testpypi $PACKAGE_PATH -u $TWINE_USERNAME -p TWINE_TEST_PASSWORD
